
#es un entorno diferente cada titulo y todo lo que hagamos se almacena en .tox
#podemos ejecutar comandos y heredar comandos
[tox]
# lista de entornos que se comprobar√°n al ejecutar tox
envlist = test_package, typechecks, lint, stylechecks
skipsdist = True

#mandatory
[testenv]
install_command = pip install {opts} {packages}

[testenv:test_package]
# dependencias
deps =
	-rrequirements/test_requirements.txt
# 
setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0
# los comandos que se van a ejecutar en este entorno
commands=
	python my_model/train_pipeline.py
	pytest \
	-s \
	-vv \
	{posargs:tests/}

[testenv:train]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}
#hereadamos las variables de test_package y testenv..pythonpath :)
setenv =
	{[testenv:test_package]setenv}
# los comandos que se van a ejecutar en este entorno
commands=
	python my_model/train_pipeline.py

[testenv:typechecks]
envdir = {toxworkdir}/test_package
# dependencias
deps =
	{[testenv:test_package]deps}
# los comandos que se van a ejecutar en este entorno
commands = {posargs:mypy my_model}

[testenv:stylechecks]
envdir = {toxworkdir}/test_package
# dependencias
deps =
	{[testenv:test_package]deps}
# los comandos que se van a ejecutar en este entorno
commands = {posargs:flake8 my_model tests}

[testenv:lint]
envdir = {toxworkdir}/test_package
# dependencias
deps =
	{[testenv:test_package]deps}
# los comandos que se van a ejecutar en este entorno
commands =
	isort my_model tests
	black my_model tests

[flake8]
exclude = .git,env
max-line-length = 100